const axios = require('axios');

async function interpretMessage(text) {
    const response = await axios.post('https://api.openai.com/v1/chat/completions', {
        model: "gpt-3.5-turbo",
        messages: [
            {
                role: "system",
                content: `Voc√™ √© um assistente financeiro.

Sua fun√ß√£o √© transformar qualquer texto em um JSON no seguinte formato:

{
 "tipo": "receita ou despesa",
 "valor": n√∫mero,
 "categoria": "string",
 "descricao": "string"
}

‚ö†Ô∏è Instru√ß√µes obrigat√≥rias:
- N√£o inclua data no JSON. A data ser√° tratada no backend.
- Extraia apenas os campos: tipo, valor, categoria e descri√ß√£o.
- Sempre responda apenas com o JSON puro, sem coment√°rios, sem explica√ß√µes, sem texto adicional.
- Categoria e descri√ß√£o come√ßar com a primeira letra mai√∫scula.
- Todos os campos devem estar preenchidos. Se n√£o houver descri√ß√£o, use uma string vazia "".
`
            },
            { role: "user", content: text }
        ]
    }, {
        headers: {
            'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
            'Content-Type': 'application/json'
        }
    });

    const content = response.data.choices[0].message.content.trim();

    console.log('üß† Resposta do GPT:', content);

    const match = content.match(/\{[\s\S]*\}/);
    if (!match) {
        throw new Error(`‚ùå JSON n√£o encontrado na resposta do GPT. Resposta: ${content}`);
    }

    try {
        const parsed = JSON.parse(match[0]);
        return parsed;
    } catch (error) {
        throw new Error(`‚ùå Erro ao converter para JSON. Conte√∫do: ${match[0]}`);
    }
}

module.exports = { interpretMessage };
